//7987240578:AAHIc5vrd0IxK6tlDGoMGato6JG5znwZz5s

const { Telegraf } = require('telegraf');
const axios = require('axios');

console.log("Token is:", process.env.BOT_TOKEN);
const bot = new Telegraf(process.env.BOT_TOKEN);


// –•—Ä–∞–Ω–∏–ª–∏—â–µ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
const userLastRequest = new Map();

// /start
bot.start((ctx) => ctx.reply('–°–∞–ª–∞–º! –ü—Ä–∏—à–ª–∏ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ TikTok-–≤–∏–¥–µ–æ.'));

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
bot.on('text', async (ctx) => { 
  const userId = ctx.from.id;
  const now = Date.now();
  const lastTime = userLastRequest.get(userId) || 0;

  // –ü—Ä–æ–≤–µ—Ä–∫–∞: –Ω–µ —á–∞—â–µ 10 —Å–µ–∫—É–Ω–¥
  if (now - lastTime < 10000) {
    return ctx.reply('üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏ 10 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π —Å—Å—ã–ª–∫–æ–π.');
  }

  userLastRequest.set(userId, now); // –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è

  const url = ctx.message.text;

  if (!url.includes('tiktok.com') && !url.includes('vt.tiktok.com')) {
    return ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏ –Ω–∞—Å—Ç–æ—è—â—É—é —Å—Å—ã–ª–∫—É –Ω–∞ TikTok.');
  }

  try {
    await ctx.reply('‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Å—Å—ã–ª–∫—É, –ø–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ...');

    const response = await axios.get('https://tikwm.com/api', {
      params: { url }
    });

    const videoData = response.data?.data;

    if (videoData?.play) {
      await ctx.replyWithVideo({ url: videoData.play }, {
        reply_markup: {
          inline_keyboard: [
            [{ text: 'üîÅ –°–∫–∞—á–∞—Ç—å –¥—Ä—É–≥–æ–µ –≤–∏–¥–µ–æ', callback_data: 'repeat' }]
          ]
        }
      });
    } else {
      ctx.reply('üòï –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æ. –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É.');
    }

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ API:', error.message);
    ctx.reply('üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ üîÅ
bot.action('repeat', async (ctx) => {
  await ctx.answerCbQuery(); // —Å–∫—Ä—ã–≤–∞–µ—Ç "—á–∞—Å–∏–∫–∏"
  await ctx.reply('–ü—Ä–∏—à–ª–∏ —Å–ª–µ–¥—É—é—â—É—é —Å—Å—ã–ª–∫—É –Ω–∞ TikTok-–≤–∏–¥–µ–æ üëá');
});

bot.launch();
console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω üöÄ');
